import os
import json
import asyncio  # –ò–º–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞—É–∑—ã
import calendar  # –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –º–µ—Å—è—Ü–∞
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, filters
from telegram.constants import ParseMode
from datetime import datetime, timedelta
from dateutil.relativedelta import relativedelta
import logging

logging.basicConfig(level=logging.INFO)

# –í–∞—à —Ç–æ–∫–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–¥–º–∏–Ω–æ–≤
TOKEN = '7692845826:AAEWYoo1bFU22LNa79-APy_iZyio2dwc9zA'
MAIN_ADMIN_IDS = [1980610942, 394468757]  # –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à ID

# –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
CURRENT_DIR = os.path.dirname(os.path.abspath(__file__))
ADMINS_FILE = os.path.join(CURRENT_DIR, 'admins.json')
USER_IDS_FILE = os.path.join(CURRENT_DIR, 'user_ids.json')

# –•—Ä–∞–Ω–µ–Ω–∏–µ 
user_states = {}    # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
reservations = {} # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
confirmed_reservations = {}  # –ó–¥–µ—Å—å –±—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏
admin_clarifications = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
clarifying_reservation = {} # –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ —É—Ç–æ—á–Ω–µ–Ω–∏–µ –±—Ä–æ–Ω–∏

def is_main_admin(user_id):
    return user_id in MAIN_ADMIN_IDS  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ user_id –≤ —Å–ø–∏—Å–∫–µ –≥–ª–∞–≤–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤

## –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
def load_user_ids():
    if os.path.exists(USER_IDS_FILE):
        try:
            with open(USER_IDS_FILE, 'r', encoding='utf-8') as file:
                data = json.load(file)
                if isinstance(data, dict):
                    return data
                else:
                    return {}
        except (json.JSONDecodeError, FileNotFoundError):
            return {}
    return {}

# –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {'phone': '1234567890', 'name': '–ò–≤–∞–Ω', 'discount': 10}

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞
user_ids = load_user_ids()  # –î–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–ª–æ–≤–∞—Ä—ë–º

# –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ª–æ–≤–∞—Ä—å, –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –µ—â–µ –Ω–µ—Ç
def add_user_id(user_id):
    user_id_str = str(user_id)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º user_id –≤ —Å—Ç—Ä–æ–∫—É –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–ª—é—á–∞
    if user_id_str not in user_ids:
        user_ids[user_id_str] = {
            "phone": "",  # –û—Å—Ç–∞–≤–ª—è–µ–º –ø—É—Å—Ç—ã–º, —á—Ç–æ–±—ã –ø–æ–∑–∂–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å
            "name": "",   # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è –∏–º–µ–Ω–∏
            "discount": 0  # –î–æ–±–∞–≤–ª—è–µ–º —Å–∫–∏–¥–∫—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî 0%
        }
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—è discount
        if "discount" not in user_ids[user_id_str]:
            user_ids[user_id_str]['discount'] = 0  # –î–æ–±–∞–≤–ª—è–µ–º —Å–∫–∏–¥–∫—É, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
    save_user_ids(user_ids)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
def save_user_ids(user_ids):
    with open(USER_IDS_FILE, 'w', encoding='utf-8') as file:
        json.dump(user_ids, file, ensure_ascii=False, indent=4)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–æ–≤
def load_admins():
    if os.path.exists(ADMINS_FILE):
        try:
            with open(ADMINS_FILE, 'r') as file:
                return json.load(file)
        except (json.JSONDecodeError, FileNotFoundError):
            return [MAIN_ADMIN_IDS]
    return [MAIN_ADMIN_IDS]

def save_admins(admins):
    with open(ADMINS_FILE, 'w') as file:
        json.dump(admins, file)

admins = load_admins()
# –†–æ–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
# –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–º–µ–Ω–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞
admin_names = ["–ú–∞—à–∞", "–ê–Ω—è", "–ü–∞—à–∞"]
hookah_master_names = ["–†–æ–¥–∏–æ–Ω", "–ü–∞—à–∞", "–ê–Ω–¥—Ä–µ–π"]

# –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏
active_staff = {
    "admin": "–ú–∞—à–∞",  # –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
    "hookah_master": "–†–æ–¥–∏–æ–Ω"  # –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–∞–ª—å—è–Ω—â–∏–∫
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = Application.builder().token(TOKEN).build()

def is_admin(user_id):
    return user_id in admins

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def reset_user_state(user_id):
    if user_id in reservations:
        del reservations[user_id]

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∑–∞–ø—Ä–æ—Å–æ–º –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –∏–º–µ–Ω–∏
async def start(update: Update, context):
    user_id = update.message.from_user.id
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    add_user_id(user_id)

    user_data = user_ids.get(str(user_id), {})

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –∏–º–µ–Ω–∏
    if 'phone' not in user_data or user_data['phone'] == "":
        await update.message.reply_text("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –†–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ Smoke House! \n–ó–∞–ø–æ–ª–Ω—è—è –∞–Ω–∫–µ—Ç—É –≤—ã –¥–∞–µ—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. \n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.")
        context.user_data['awaiting_phone'] = True
        return
    if 'name' not in user_data or user_data['name'] == "":
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è.")
        context.user_data['awaiting_name'] = True
        return

    # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ —É–∂–µ –µ—Å—Ç—å, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∫–∞–∫ –æ–±—ã—á–Ω–æ
    greeting = f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Smoke House, {user_data['name']}!"

    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∫–∏–¥–∫–µ, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∞ –±–æ–ª—å—à–µ 0
    if user_data.get('discount', 0) > 0:
        greeting += f"\n–í–∞—à–∞ —Ç–µ–∫—É—â–∞—è —Å–∫–∏–¥–∫–∞ –Ω–∞ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∫–∞–ª—å—è–Ω - {user_data['discount']} —Ä—É–±."

    greeting += f"\n–°–µ–≥–æ–¥–Ω—è –Ω–∞ —Å–º–µ–Ω–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {active_staff['admin']} –∏ –ö–∞–ª—å—è–Ω—â–∏–∫ {active_staff['hookah_master']}."

    keyboard = [[InlineKeyboardButton("–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫", callback_data="book_table")]]
    
    if is_admin(update.message.from_user.id):
        keyboard.append([InlineKeyboardButton("–ê–¥–º–∏–Ω –º–µ–Ω—é", callback_data="admin_menu")])

    await update.message.reply_text(greeting, reply_markup=InlineKeyboardMarkup(keyboard))

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
async def handle_main_menu(update: Update, context):
    query = update.callback_query
    await query.answer()

    if query.data == "book_table":
        await show_calendar(query, context)  # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    elif query.data == "admin_menu":
        if is_admin(query.from_user.id):
            await show_admin_menu(query)  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–¥–º–∏–Ω –º–µ–Ω—é
        else:
            await query.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –≤ –∞–¥–º–∏–Ω –º–µ–Ω—é.")

# –ü–æ–∫–∞–∑ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
async def show_admin_menu(query: Update):
    keyboard = []
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–ª–∞–≤–Ω—ã–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if is_main_admin(query.from_user.id):
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        keyboard.extend([
            [InlineKeyboardButton("üë®‚Äçüë©‚Äçüëß‚Äçüë¶–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤", callback_data="list_admins")],
            [InlineKeyboardButton("üôã‚Äç‚ôÄÔ∏è–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞", callback_data="add_admin")],
            [InlineKeyboardButton("üôÖ‚Äç‚ôÄÔ∏è–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞", callback_data="remove_admin")],
        ])
    
    # –û–±—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    keyboard.extend([
        [InlineKeyboardButton("ü´°–í—Å—Ç–∞—Ç—å –Ω–∞ —Å–º–µ–Ω—É", callback_data="take_shift")],
        [InlineKeyboardButton("üì® –†–∞—Å—Å—ã–ª–∫–∞", callback_data="broadcast_message")],
        [InlineKeyboardButton("üßæ–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–∫–∏–¥–∫—É", callback_data="edit_discount")],
        [InlineKeyboardButton("üìã–°–ø–∏—Å–æ–∫ –±—Ä–æ–Ω–µ–π", callback_data="booking_list")],  # <-- –ó–∞–ø—è—Ç–∞—è –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∑–¥–µ—Å—å
        [InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="go_back")]
    ])
    
    await query.message.reply_text(
        f"–í—ã –≤ –∞–¥–º–∏–Ω –º–µ–Ω—é. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n–í–µ—Ä—Å–∏—è 2.2",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π –≤ –∞–¥–º–∏–Ω –º–µ–Ω—é
async def handle_admin_menu(update: Update, context):
    query = update.callback_query
    await query.answer()

    # –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    print(f"Callback data: {query.data}")  # –°–º–æ—Ç—Ä–∏–º, —á—Ç–æ –∑–∞ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏—Ö–æ–¥—è—Ç

    # –ü–æ–∫–∞–∑ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–æ–≤
    if query.data == "list_admins":
        admin_list = "\n".join([str(admin_id) for admin_id in admins])
        await query.message.reply_text(f"–¢–µ–∫—É—â–∏–µ –∞–¥–º–∏–Ω—ã:\n{admin_list}")

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞
    elif query.data == "add_admin":
        await query.message.reply_text("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤ –∞–¥–º–∏–Ω—ã:")
        context.user_data['state'] = 'awaiting_admin_id'  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞

    # –£–¥–∞–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞
    elif query.data == "remove_admin":
        keyboard = [[InlineKeyboardButton(f"{admin_id}", callback_data=f"delete_admin_{admin_id}")]
                    for admin_id in admins]
        keyboard.append([InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="go_back")])
        await query.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∞–¥–º–∏–Ω–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:", reply_markup=InlineKeyboardMarkup(keyboard))

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–º–µ–Ω—â–∏–∫–∞
    elif query.data == "set_shift_admin":
        keyboard = [[InlineKeyboardButton(f"{admin_id}", callback_data=f"set_shift_{admin_id}")]
                    for admin_id in admins]
        keyboard.append([InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="go_back")])
        await query.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∞–¥–º–∏–Ω–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–º–µ–Ω—â–∏–∫–æ–º:", reply_markup=InlineKeyboardMarkup(keyboard))

    # –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    if query.data == "broadcast_message":
        await query.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:")
        context.user_data['state'] = 'broadcast_message'  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏

    # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫–∏–¥–∫–∏
    elif query.data == "edit_discount":
        print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –Ω–∞ –∫–Ω–æ–ø–∫—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫–∏–¥–∫–∏")  # –õ–æ–≥–∏—Ä—É–µ–º
        await show_edit_discount_menu(query, context)  # –í—ã–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ "–ù–∞–∑–∞–¥"
    elif query.data == "go_back":
        await show_admin_menu(query)

    await query.message.delete()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞
async def handle_admin_removal(update: Update, context):
    query = update.callback_query
    await query.answer()
    admin_id = int(query.data.split('_')[2])  # –ü–æ–ª—É—á–∞–µ–º ID –∞–¥–º–∏–Ω–∞ –∏–∑ callback_data

    if admin_id in admins:
        admins.remove(admin_id)
        save_admins(admins)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤
        await query.message.reply_text(f"–ê–¥–º–∏–Ω {admin_id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.")
    else:
        await query.message.reply_text("–ê–¥–º–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω.")

async def handle_shift_selection(update: Update, context):
    query = update.callback_query
    await query.answer()

    if query.data == "take_shift":
        keyboard = [
            [InlineKeyboardButton("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", callback_data="set_admin")],
            [InlineKeyboardButton("–ö–∞–ª—å—è–Ω—â–∏–∫", callback_data="set_hookah_master")],
            [InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="go_back")]
        ]
        await query.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å:", reply_markup=InlineKeyboardMarkup(keyboard))

    # –ï—Å–ª–∏ –≤—ã–±–∏—Ä–∞—é—Ç —Ä–æ–ª—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    elif query.data == "set_admin":
        keyboard = [[InlineKeyboardButton(name, callback_data=f"choose_admin_{name}")]
                    for name in admin_names]
        keyboard.append([InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="go_back")])
        await query.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:", reply_markup=InlineKeyboardMarkup(keyboard))

    # –ï—Å–ª–∏ –≤—ã–±–∏—Ä–∞—é—Ç —Ä–æ–ª—å –ö–∞–ª—å—è–Ω—â–∏–∫–∞
    elif query.data == "set_hookah_master":
        keyboard = [[InlineKeyboardButton(name, callback_data=f"choose_hookah_master_{name}")]
                    for name in hookah_master_names]
        keyboard.append([InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="go_back")])
        await query.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–ª—å—è–Ω—â–∏–∫–∞:", reply_markup=InlineKeyboardMarkup(keyboard))

async def handle_edit_discount(update: Update, context):
    if is_admin(update.message.from_user.id):  # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫–∏–¥–∫–∏:")
        context.user_data['awaiting_phone_for_discount'] = True
    else:
        await update.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫–∏–¥–æ–∫.")


from datetime import datetime, timedelta

async def show_booking_list(update, context):
    query = update.callback_query
    user_id = query.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    if not is_admin(user_id):
        await query.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π.")
        return

    today = datetime.now().date()
    two_days_ago = today - timedelta(days=2)

    # –°–æ–±–∏—Ä–∞–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –¥–Ω—è
    booking_message = "–°–ø–∏—Å–æ–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –¥–Ω—è:\n"
    for booking_id, booking in confirmed_reservations.items():
        booking_date_str = booking.get('date')  # –î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ '–¥–¥-–º–º-–≥–≥–≥–≥'

        try:
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É '–¥–¥-–º–º-–≥–≥–≥–≥' –≤ –æ–±—ä–µ–∫—Ç datetime.date –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
            booking_date = datetime.strptime(booking_date_str, '%d-%m-%Y').date()

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞—Ç–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 2 –¥–Ω–µ–π
            if booking_date >= today:
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
                booking_message += (
                    f"- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {booking['user']}\n"
                    f"–¢–µ–ª–µ—Ñ–æ–Ω: {booking['phone']}\n"
                    f"–°–∫–∏–¥–∫–∞: {booking['discount']} —Ä—É–±.\n"
                    f"–î–∞—Ç–∞: {booking['date']}\n"
                    f"–ì–æ—Å—Ç–∏: {booking['guests']}\n"
                    f"–í—Ä–µ–º—è: {booking['time']}\n"
                    f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {booking['comment']}\n\n"
                )
        except ValueError:
            # –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
            continue

    if booking_message == "–°–ø–∏—Å–æ–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –¥–Ω—è:\n":
        booking_message = "–ù–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 –¥–Ω—è."

    await query.message.reply_text(booking_message)

# –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫–∏–¥–∫–∏
async def show_edit_discount_menu(update: Update, context):
    if user_ids:
        # –õ–æ–≥–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        print(f"–¢–µ–∫—É—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {user_ids}")

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∏–º–µ–Ω, –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Ü–∏—Ñ—Ä—ã) –∏ —Å–∫–∏–¥–æ–∫
        keyboard = [
            [
                InlineKeyboardButton(
                    f"{user_data.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')} {user_data['phone']} - {user_data.get('discount', 0)} —Ä—É–±.",
                    callback_data=f"select_phone_{user_data['phone']}"
                )
            ]
            for user_data in user_ids.values() 
            if 'phone' in user_data and user_data['phone'] and len(user_data['phone']) >= 4
        ]
        
        if keyboard:  # –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–º–µ—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞
            await update.message.reply_text(
                "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏:",
                reply_markup=InlineKeyboardMarkup(keyboard)
            )
        else:
            await update.message.reply_text("–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–æ–º–µ—Ä–∞–º–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤.")
    else:
        await update.message.reply_text("–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ –∫–∞–ª—å—è–Ω—â–∏–∫–∞
async def handle_staff_choice(update: Update, context):
    query = update.callback_query
    await query.answer()

    # –í—ã–±–æ—Ä –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if query.data.startswith("choose_admin_"):
        chosen_name = query.data.split('choose_admin_')[1]  # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        active_staff["admin"] = chosen_name  # –û–±–Ω–æ–≤–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        await query.message.reply_text(f"–¢–µ–ø–µ—Ä—å –Ω–∞ —Å–º–µ–Ω–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {chosen_name}.")

    # –í—ã–±–æ—Ä –ö–∞–ª—å—è–Ω—â–∏–∫–∞
    elif query.data.startswith("choose_hookah_master_"):
        chosen_name = query.data.split('choose_hookah_master_')[1]  # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –∫–∞–ª—å—è–Ω—â–∏–∫–∞
        active_staff["hookah_master"] = chosen_name  # –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–ª—å—è–Ω—â–∏–∫–∞
        await query.message.reply_text(f"–¢–µ–ø–µ—Ä—å –Ω–∞ —Å–º–µ–Ω–µ –ö–∞–ª—å—è–Ω—â–∏–∫: {chosen_name}.")

    await query.message.delete()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏
async def handle_phone_selection(update: Update, context):
    query = update.callback_query
    await query.answer()

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–∑ callback_data
    selected_phone = query.data.split('_')[2]
    context.user_data['phone_for_discount'] = selected_phone

    await query.message.reply_text(f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {selected_phone}. –í–≤–µ–¥–∏—Ç–µ —Å–∫–∏–¥–∫—É –≤ —Ä—É–±–ª—è—Ö –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    context.user_data['awaiting_discount'] = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ —Å–∫–∏–¥–∫–∏
    await query.message.delete()  # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

# –ö–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã
async def show_calendar(query, selected_date=None, current_month=None):
    if current_month is None:
        current_month = datetime.now().replace(day=1)

    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –∏ –ø–µ—Ä–µ–≤–æ–¥–∏–º –µ–≥–æ
    month_name = calendar.month_name[current_month.month]
    month_name_ru = {
        'January': '–Ø–Ω–≤–∞—Ä—å',
        'February': '–§–µ–≤—Ä–∞–ª—å',
        'March': '–ú–∞—Ä—Ç',
        'April': '–ê–ø—Ä–µ–ª—å',
        'May': '–ú–∞–π',
        'June': '–ò—é–Ω—å',
        'July': '–ò—é–ª—å',
        'August': '–ê–≤–≥—É—Å—Ç',
        'September': '–°–µ–Ω—Ç—è–±—Ä—å',
        'October': '–û–∫—Ç—è–±—Ä—å',
        'November': '–ù–æ—è–±—Ä—å',
        'December': '–î–µ–∫–∞–±—Ä—å'
    }
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞
    month_name_ru_translated = month_name_ru.get(month_name, month_name)  # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥ –∏–ª–∏ –æ—Å—Ç–∞–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª

    keyboard = []
    today = datetime.now().date()  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ date

    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã
    for week in range(5):
        row = []
        for day in range(7):
            day_date = (current_month + timedelta(days=(week * 7 + day))).date()  # –ü—Ä–∏–≤–æ–¥–∏–º –∫ —Ñ–æ—Ä–º–∞—Ç—É date
            if day_date.month == current_month.month:
                button_text = f"{day_date.day}"
                if day_date < today:  # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –æ–¥–Ω–æ–≥–æ —Ç–∏–ø–∞ (date)
                    button_text += "‚ùå"  # –ö—Ä–∞—Å–Ω—ã–π –∫—Ä–µ—Å—Ç–∏–∫ –Ω–∞ –ø—Ä–æ—à–µ–¥—à–∏—Ö –¥–∞—Ç–∞—Ö
                row.append(InlineKeyboardButton(button_text, callback_data=f"date_{day_date}"))
        if row:
            keyboard.append(row)

    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É –º–µ—Å—è—Ü–∞–º–∏
    prev_month = current_month - timedelta(days=30)
    next_month = current_month + timedelta(days=30)
    keyboard.append([
        InlineKeyboardButton("<<", callback_data=f"calendar_{prev_month.isoformat()}"),
        InlineKeyboardButton(">>", callback_data=f"calendar_{next_month.isoformat()}")
    ])

    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º
    await query.message.delete()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –º–µ—Å—è—Ü–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º
    await query.message.reply_text(f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É ({month_name_ru_translated}):", reply_markup=InlineKeyboardMarkup(keyboard))

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã
async def handle_calendar(update: Update, context):
    query = update.callback_query
    await query.answer()

    if query.data.startswith("calendar_"):
        current_month = datetime.fromisoformat(query.data.split('_')[1])
        await show_calendar(query, current_month=current_month)
    else:
        selected_date_str = query.data.split('_')[1]
        user_id = query.from_user.id

        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –¥–∞—Ç–æ–π –≤ –æ–±—ä–µ–∫—Ç datetime
        selected_date = datetime.strptime(selected_date_str, "%Y-%m-%d").date()

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–∞–ø–∏—Å—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        if user_id not in reservations:
            reservations[user_id] = {}

        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await query.message.delete()

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–¥–¥-–º–º-–≥–≥–≥–≥"
        formatted_date = selected_date.strftime("%d-%m-%Y")
        reservations[user_id]['date'] = formatted_date

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –¥–∞—Ç–æ–π
        await query.message.reply_text(f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –¥–∞—Ç—É: {formatted_date}. –ù–µ –∑–∞–±—É–¥—å—Ç–µ!")

        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É –≥–æ—Å—Ç–µ–π
        keyboard = [[InlineKeyboardButton(f"{i}", callback_data=f"guests_{i}") for i in range(1, 11)]]
        await query.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π:", reply_markup=InlineKeyboardMarkup(keyboard))

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ 'IN_BOOKING' (–≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è)
        user_states[user_id] = 'IN_BOOKING'

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≥–æ—Å—Ç–µ–π
async def handle_guest_selection(update: Update, context):
    query = update.callback_query
    await query.answer()
    guests = query.data.split('_')[1]
    user_id = query.from_user.id
    await query.message.delete()

    if user_id not in reservations:
        reservations[user_id] = {}

    reservations[user_id]['guests'] = guests

    # –ü–µ—Ä–µ—Ö–æ–¥ –∫ –≤—ã–±–æ—Ä—É –≤—Ä–µ–º–µ–Ω–∏
    keyboard = []
    start_hour = 14  # –ù–∞—á–∏–Ω–∞–µ–º —Å 14:00
    end_hour = 26  # 02:00 —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è (24 + 2)

    for hour in range(start_hour, end_hour):
        row = []
        row.append(InlineKeyboardButton(f"{hour % 24}:00", callback_data=f"time_{hour % 24}:00"))
        row.append(InlineKeyboardButton(f"{hour % 24}:30", callback_data=f"time_{hour % 24}:30"))
        keyboard.append(row)

    await query.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è:", reply_markup=InlineKeyboardMarkup(keyboard))

## –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏
async def handle_time_selection(update: Update, context):
    query = update.callback_query
    await query.answer()
    time = query.data.split('_')[1]
    user_id = query.from_user.id

    if user_id not in reservations:
        reservations[user_id] = {}

    reservations[user_id]['time'] = time

    await query.message.delete()
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–∂–µ–ª–∞–Ω–∏—è
    keyboard = [
        [InlineKeyboardButton("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data=f"skip_comment")]
    ]
    await query.message.reply_text("–ï—Å—Ç—å –ª–∏ –∫–∞–∫–∏–µ-—Ç–æ –ø–æ–∂–µ–ª–∞–Ω–∏—è? –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π.", reply_markup=InlineKeyboardMarkup(keyboard))

    # –û–∂–∏–¥–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏–ª–∏ –ø–æ–∂–µ–ª–∞–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

async def skip_comment(update: Update, context):
    query = update.callback_query
    user_id = query.from_user.id  # –ú–µ–Ω—è–µ–º –Ω–∞ query.from_user.id
    
    if user_id not in reservations:
        reservations[user_id] = {}

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π "–ù–µ—Ç –ø–æ–∂–µ–ª–∞–Ω–∏–π"
    reservations[user_id]['comment'] = "–ù–µ—Ç –ø–æ–∂–µ–ª–∞–Ω–∏–π"
    
    await query.message.delete()
    await query.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω—É
    await send_reservation_to_admin(update, context, reservations[user_id])
    user_states[user_id] = 'IDLE'

def is_admin(user_id):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ user_id –≤ —Å–ø–∏—Å–∫–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    return user_id in admins

async def handle_message(update: Update, context):
    user_id = update.message.from_user.id
    message_text = update.message.text  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ–æ—Ç–æ
    if update.message.photo:
        file_id = update.message.photo[-1].file_id  # –ü–æ–ª—É—á–∞–µ–º file_id –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ñ–æ—Ç–æ
        message_text = update.message.caption  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–¥–ø–∏—Å—å —Ñ–æ—Ç–æ –∫–∞–∫ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        print(f"–§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ, file_id: {file_id}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –∫—Ä–æ–º–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        await broadcast_message(context, message_text, photo=file_id, exclude_user_id=user_id)
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–∏–¥–µ–æ
    if update.message.video:
        file_id = update.message.video.file_id  # –ü–æ–ª—É—á–∞–µ–º file_id –≤–∏–¥–µ–æ
        message_text = update.message.caption  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–¥–ø–∏—Å—å –≤–∏–¥–µ–æ –∫–∞–∫ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        print(f"–í–∏–¥–µ–æ –ø–æ–ª—É—á–µ–Ω–æ, file_id: {file_id}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –∫—Ä–æ–º–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        await broadcast_message(context, message_text, video=file_id, exclude_user_id=user_id)
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤–≤–æ–¥–∏—Ç –Ω–æ–≤—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç —Å–∫–∏–¥–∫–∏
    if context.user_data.get('awaiting_discount'):
        try:
            discount = int(message_text)
            phone = context.user_data.get('phone_for_discount')

            # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–∫–∏–¥–∫—É
            for user_id, user_data in user_ids.items():
                if user_data.get('phone') == phone:
                    user_data['discount'] = discount
                    save_user_ids(user_ids)
                    # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ —Å–º–µ–Ω–µ —Å–∫–∏–¥–∫–∏
                    await update.message.reply_text(f"–°–∫–∏–¥–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {phone} —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ - {discount} —Ä—É–±.")

                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∞–º–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ –Ω–æ–≤–æ–π —Å–∫–∏–¥–∫–µ
                    await context.bot.send_message(chat_id=user_id, text=f"–í–∞—à–∞ –Ω–æ–≤–∞—è —Å–∫–∏–¥–∫–∞ –Ω–∞ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∫–∞–ª—å—è–Ω - {discount} —Ä—É–±.!")

                    break

            context.user_data['awaiting_discount'] = False  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        except ValueError:
            await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ –¥–ª—è —Å–∫–∏–¥–∫–∏.")
        return
    
    # –®–∞–≥ 1: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–≤–æ–¥ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    if context.user_data.get('awaiting_phone'):
        if message_text.isdigit() and len(message_text) >= 10:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            if str(user_id) not in user_ids:  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç—Ä–æ–∫–æ–≤—ã–π –∫–ª—é—á
                user_ids[str(user_id)] = {}  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_ids[str(user_id)]['phone'] = message_text

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            save_user_ids(user_ids)

            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–º—è –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è.")
            context.user_data['awaiting_phone'] = False
            context.user_data['awaiting_name'] = True
        else:
            await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–Ω–µ –º–µ–Ω–µ–µ 10 —Ü–∏—Ñ—Ä).")
        return

    # –®–∞–≥ 2: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–≤–æ–¥ –∏–º–µ–Ω–∏
    if context.user_data.get('awaiting_name'):
        if len(message_text) > 0:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–º—è –Ω–µ –ø—É—Å—Ç–æ–µ
            user_ids[str(user_id)]['name'] = message_text

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è
            save_user_ids(user_ids)

            await update.message.reply_text(f"–°–ø–∞—Å–∏–±–æ! –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {user_ids[str(user_id)]['phone']}\n–ò–º—è: {message_text}")

            context.user_data['awaiting_name'] = False  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ
            # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—ã—á–Ω—É—é –ª–æ–≥–∏–∫—É –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
            await start(update, context)
        else:
            await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è.")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
    if context.user_data.get('state') == 'broadcast_message':
        message_text = update.message.text
        
        # –ü–æ–ª—É—á–∞–µ–º ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
        admin_id = update.message.from_user.id
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –∫—Ä–æ–º–µ —Å–∞–º–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        await broadcast_message(context, message_text, exclude_user_id=admin_id)
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–∞—Å—Å—ã–ª–∫–∏
        await update.message.reply_text("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.")
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ —Ä–∞—Å—Å—ã–ª–∫–∏
        context.user_data['state'] = None
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤–≤–æ–¥–∏—Ç –Ω–æ–≤—ã–π ID –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    if context.user_data.get('state') == 'awaiting_admin_id':  # –£–Ω–∏–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞
        try:
            new_admin_id = int(message_text)
            if new_admin_id not in admins:
                admins.append(new_admin_id)
                save_admins(admins)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤
                await update.message.reply_text(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {new_admin_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∞–¥–º–∏–Ω—ã.")
            else:
                await update.message.reply_text(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {new_admin_id} —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º.")
        except ValueError:
            await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        
        context.user_data['state'] = None  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        return

    # –ï—Å–ª–∏ —ç—Ç–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
    if user_states.get(user_id) == 'IN_BOOKING':
        reservation = reservations.get(user_id, {})
        reservations[user_id]['comment'] = update.message.text
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        await send_reservation_to_admin(update, context, reservations[user_id])
        user_states[user_id] = 'IDLE'

    elif is_admin(user_id):
        # –ï—Å–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–¥–µ–ª–∞–ª –±—Ä–æ–Ω—å, –æ–Ω —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç—Å—è –∫–∞–∫ –æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        if user_id in admin_clarifications:
            target_user_id = admin_clarifications[user_id]
            clarification_message = update.message.text
            await context.bot.send_message(chat_id=target_user_id, text=f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É—Ç–æ—á–Ω—è–µ—Ç: {clarification_message}")
            del admin_clarifications[user_id]  # –£–¥–∞–ª—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å —É—Ç–æ—á–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
            user_states[user_id] = 'IDLE'  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –∞–¥–º–∏–Ω, —Å–¥–µ–ª–∞–≤—à–∏–π –±—Ä–æ–Ω—å, —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ —É—Ç–æ—á–Ω–µ–Ω–∏–∏
        elif any(user_id == clarifier_id for clarifier_id in admin_clarifications.values()):
            # –ù–∞—Ö–æ–¥–∏–º ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –∫–æ–º—É —É—Ç–æ—á–Ω—è—é—Ç (–∞–≤—Ç–æ—Ä –±—Ä–æ–Ω–∏)
            target_user_id = next(
                key for key, clarifier_id in admin_clarifications.items() if clarifier_id == user_id
            )
            clarification_message = update.message.text
            await context.bot.send_message(chat_id=target_user_id, text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Ç–æ—á–Ω—è–µ—Ç: {clarification_message}")  # –ú–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
            del admin_clarifications[target_user_id]  # –£–¥–∞–ª—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å —É—Ç–æ—á–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
            user_states[user_id] = 'IDLE'  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

        else:
            await update.message.reply_text("–í—ã –Ω–µ –Ω–∞—á–∞–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å —É—Ç–æ—á–Ω–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.")
        return

    # –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    else:
        if user_states.get(user_id) == 'IN_BOOKING':
            reservation = reservations.get(user_id, {})
            reservations[user_id]['comment'] = update.message.text
            await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
            await send_reservation_to_admin(update, context, reservations[user_id])
            user_states[user_id] = 'IDLE'  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –±—Ä–æ–Ω–∏
        elif user_states.get(user_id) == 'WAITING_FOR_CLARIFICATION':
            reservations[user_id]['clarification'] = update.message.text
            await update.message.reply_text(f"–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É, –æ–∂–∏–¥–∞–π—Ç–µ.")
            await send_clarification_to_admin(update, context, reservations[user_id])
            user_states[user_id] = 'IDLE'  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ —É—Ç–æ—á–Ω–µ–Ω–∏—è
        else:
            await update.message.reply_text("–í—ã –Ω–µ –Ω–∞—á–∏–Ω–∞–ª–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ.")
        return

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Ç–æ—á–Ω–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
async def clarify_reservation(update: Update, context):
    query = update.callback_query
    await query.answer()
    user_id = int(query.data.split('_')[1])

    admin_clarifications[query.from_user.id] = user_id  # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è

    # –ò–∑–º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —É—Ç–æ—á–Ω–µ–Ω–∏–µ
    user_states[user_id] = 'WAITING_FOR_CLARIFICATION'

    await query.message.reply_text("–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –±—Ä–æ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")

# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∞–¥–º–∏–Ω—É
async def send_reservation_to_admin(update: Update, context, reservation):
    if update.message:
        user_id = update.message.from_user.id
        mention_html = update.message.from_user.mention_html()
    elif update.callback_query:
        user_id = update.callback_query.from_user.id
        mention_html = update.callback_query.from_user.mention_html()
    else:
        return  # –ï—Å–ª–∏ –Ω–∏ —Ç–æ, –Ω–∏ –¥—Ä—É–≥–æ–µ, –ø—Ä–æ—Å—Ç–æ –≤—ã—Ö–æ–¥–∏–º

    add_user_id(user_id)

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω)
    user_data = user_ids.get(str(user_id), {})
    user_name = user_data.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
    user_phone = user_data.get('phone', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
    user_discount = user_data.get('discount', 0)

    # –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    message = (
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {mention_html}\n"
        f"–î–∞–Ω–Ω—ã–µ: {user_name} {user_phone}\n"
        f"–°–∫–∏–¥–∫–∞: {user_discount} —Ä—É–±.\n"
        f"–î–∞—Ç–∞: {reservation['date']}\n"
        f"–ì–æ—Å—Ç–∏: {reservation['guests']}\n"
        f"–í—Ä–µ–º—è: {reservation['time']}\n"
        f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {reservation.get('comment', '–ù–µ—Ç –ø–æ–∂–µ–ª–∞–Ω–∏–π')}"
    )

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard = [
        [InlineKeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –±—Ä–æ–Ω—å", callback_data=f"confirm_{user_id}"),
         InlineKeyboardButton("–£—Ç–æ—á–Ω–∏—Ç—å –±—Ä–æ–Ω—å", callback_data=f"clarify_{user_id}")]
    ]

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥—Ä—É–≥–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º (–∫—Ä–æ–º–µ —Ç–æ–≥–æ, –∫—Ç–æ —Å–¥–µ–ª–∞–ª –±—Ä–æ–Ω—å)
    for admin_id in admins:
        if admin_id != user_id:  # –ò—Å–∫–ª—é—á–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–ª–∞–µ—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
            await context.bot.send_message(
                chat_id=admin_id,
                text=message,
                reply_markup=InlineKeyboardMarkup(keyboard),
                parse_mode=ParseMode.HTML
            )

    # –ò–∑–º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ "–û–∂–∏–¥–∞–Ω–∏–µ"
    user_states[user_id] = 'IDLE'

    # –ï—Å–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–¥–µ–ª–∞–ª –±—Ä–æ–Ω—å, —Å—Ç–∞–≤–∏–º –µ–≥–æ –≤ —Å—Ç–∞—Ç—É—Å –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —ç—Ç–æ–π –±—Ä–æ–Ω–∏
    if is_admin(user_id):
        user_states[user_id] = 'USER_IN_BOOKING'  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–∫ –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É—Ç–æ—á–Ω–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
async def send_clarification_to_admin(update: Update, context, reservation):
    user_id = update.message.from_user.id

    # –°–æ–æ–±—â–µ–Ω–∏–µ —Å —É—Ç–æ—á–Ω–µ–Ω–∏–µ–º
    clarification_message = (
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {update.message.from_user.mention_html()}\n"
        f"–£—Ç–æ—á–Ω–µ–Ω–∏–µ: {reservation.get('clarification', '–ù–µ—Ç —É—Ç–æ—á–Ω–µ–Ω–∏–π')}"
    )

    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    keyboard = [
        [InlineKeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –±—Ä–æ–Ω—å", callback_data=f"confirm_{user_id}"),
         InlineKeyboardButton("–£—Ç–æ—á–Ω–∏—Ç—å –±—Ä–æ–Ω—å", callback_data=f"clarify_{user_id}")]
    ]

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º —Å —É—Ç–æ—á–Ω–µ–Ω–∏–µ–º
    for admin_id in admins:
        try:
            await context.bot.send_message(
                chat_id=admin_id,
                text=clarification_message,
                reply_markup=InlineKeyboardMarkup(keyboard),
                parse_mode=ParseMode.HTML
            )
        except Exception as e:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É {admin_id}: {e}")

    # –ò–∑–º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ "–û–∂–∏–¥–∞–Ω–∏–µ"
    user_states[user_id] = 'IDLE'

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—Ä–æ–Ω–∏ –∏ —Å–±—Ä–æ—Å
async def confirm_reservation(update: Update, context):
    query = update.callback_query
    await query.answer()
    user_id = int(query.data.split('_')[1])  # –ü—Ä–∏–≤–æ–¥–∏–º –∫ int –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∑–∞–ø–∏—Å—å –æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_id not in reservations:
        # –ï—Å–ª–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ—Ç, –ø—Ä–æ—Å—Ç–æ —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        await query.message.delete()
        return

    reservation = reservations[user_id]

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –ª–∏ —É–∂–µ –±—Ä–æ–Ω—å
    if reservation.get('confirmed', False):
        await query.message.delete()
    else:
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –±—Ä–æ–Ω—å
        reservation['confirmed'] = True

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user_data = user_ids.get(str(user_id), {})
        user_name = user_data.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
        user_phone = user_data.get('phone', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
        user_discount = user_data.get('discount', 0)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏
        confirmed_reservations[user_id] = {
            'user': user_name,
            'phone': user_phone,
            'discount': user_discount,
            'date': reservation['date'],  # –î–∞—Ç–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
            'guests': reservation['guests'],  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π
            'time': reservation['time'],  # –í—Ä–µ–º—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
            'comment': reservation.get('comment', '–ù–µ—Ç –ø–æ–∂–µ–ª–∞–Ω–∏–π'),  # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        }
        print(f"–ü–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω–∞—è –±—Ä–æ–Ω—å: {confirmed_reservations[user_id]}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –±—Ä–æ–Ω–∏
        await context.bot.send_message(chat_id=user_id, text="–í–∞—à–∞ –±—Ä–æ–Ω—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!\n–ñ–¥—ë–º –≤–∞—Å —Å –Ω–µ—Ç–µ—Ä–ø–µ–Ω–∏–µ–º –∫ –Ω–∞–º –≤ –≥–æ—Å—Ç–∏!")

        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        reset_user_state(user_id)

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        await query.message.delete()

# –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def reset_user_state(user_id):
    global reservations  # –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ —Ä–∞–±–æ—Ç–∞–µ–º —Å –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π

    if user_id in reservations:
        del reservations[user_id]
        user_states[user_id] = 'IDLE'  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ IDLE
        print(f"–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω–æ.")  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
    else:
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ –∏–º–µ–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –±—Ä–æ–Ω–∏.")  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏

# –£–¥–∞–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
async def remove_admin(update: Update, context):
    if is_main_admin(update.message.from_user.id):
        if context.args:
            admin_id_to_remove = int(context.args[0])
            if admin_id_to_remove in admins:
                admins.remove(admin_id_to_remove)
                save_admins(admins)

                # –ü–æ–ø—ã—Ç–∫–∞ –Ω–∞–π—Ç–∏ –∏–º—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –±–∞–∑–µ user_ids
                user_data = user_ids.get(admin_id_to_remove)
                admin_name = user_data['name'] if user_data and 'name' in user_data else str(admin_id_to_remove)

                await update.message.reply_text(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {admin_name} —É–¥–∞–ª—ë–Ω.")
            else:
                await update.message.reply_text("–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.")
        else:
            await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")
    else:
        await update.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")

# –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
async def admin_list(update: Update, context):
    if is_main_admin(update.message.from_user.id):
        if admins:
            admin_list = []
            for admin_id in admins:
                # –ü–æ–ø—ã—Ç–∫–∞ –Ω–∞–π—Ç–∏ –∏–º—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –±–∞–∑–µ user_ids
                user_data = user_ids.get(admin_id)
                admin_name = user_data['name'] if user_data and 'name' in user_data else str(admin_id)
                
                admin_list.append(admin_name)
            
            await update.message.reply_text("–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:\n" + "\n".join(admin_list))
        else:
            await update.message.reply_text("–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –ø—É—Å—Ç.")
    else:
        await update.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.")

# –ö–æ–º–∞–Ω–¥—ã, –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–ª—å–∫–æ –≥–ª–∞–≤–Ω–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
async def add_admin(update: Update, context):
    if is_main_admin(update.message.from_user.id):
        if context.args:
            new_admin_id = int(context.args[0])
            if new_admin_id not in admins:
                admins.append(new_admin_id)
                save_admins(admins)
                await update.message.reply_text(f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {new_admin_id} –¥–æ–±–∞–≤–ª–µ–Ω.")
            else:
                await update.message.reply_text("–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.")
        else:
            await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã.")
    else:
        await update.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ –ø–æ file_id
async def broadcast_message(context, message_text, photo=None, video=None, exclude_user_id=None):
    # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    for user_id in user_ids:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–º, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞—Å—Å—ã–ª–∫—É
        if str(user_id) != str(exclude_user_id):
            try:
                # –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–æ —Ñ–æ—Ç–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
                if photo:
                    await context.bot.send_photo(chat_id=user_id, photo=photo, caption=message_text)
                # –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–æ –≤–∏–¥–µ–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ
                elif video:
                    await context.bot.send_video(chat_id=user_id, video=video, caption=message_text)
                # –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
                else:
                    await context.bot.send_message(chat_id=user_id, text=message_text)
            except Exception as e:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ –µ–≥–æ file_id
async def send_broadcast(update: Update, context):
    # –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    if not is_admin(update.message.from_user.id):
        await update.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    message_text = " ".join(context.args)
    
    # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —É–∫–∞–∑–∞–Ω
    if not message_text and not update.message.photo and not update.message.video:
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    photo = update.message.photo[-1].file_id if update.message.photo else None
    video = update.message.video.file_id if update.message.video else None
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    await broadcast_message(context, message_text, photo=photo, video=video)
    await update.message.reply_text("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.")

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–æ–≤ –≤ —Ñ–∞–π–ª
def save_admins(admins):
    with open(ADMINS_FILE, 'w') as file:
        json.dump(admins, file)

# –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞
def load_admins():
    if os.path.exists(ADMINS_FILE):
        with open(ADMINS_FILE, 'r') as file:
            return json.load(file)
    return []

# –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Ö–µ–Ω–¥–ª–µ—Ä—ã –∫–æ–º–∞–Ω–¥
def add_handlers(app):
    # –•–µ–Ω–¥–ª–µ—Ä—ã –∫–æ–º–∞–Ω–¥
    app.add_handler(CommandHandler("start", start))  # –ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç
    app.add_handler(CommandHandler("add_admin", add_admin))  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞
    app.add_handler(CommandHandler("remove_admin", remove_admin))  # –£–¥–∞–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞
    app.add_handler(CommandHandler("admin_list", admin_list))  # –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤
    app.add_handler(CommandHandler("broadcast", send_broadcast))  # –†–∞—Å—Å—ã–ª–∫–∞
    app.add_handler(CommandHandler("edit_discount", handle_edit_discount))  # –•–µ–Ω–¥–ª–µ—Ä —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫–∏–¥–∫–∏
    app.add_handler(CommandHandler("booking_list", show_booking_list))  # –î–æ–±–∞–≤–ª—è–µ–º —Ö–µ–Ω–¥–ª–µ—Ä –∫–æ–º–∞–Ω–¥—ã

    # –•–µ–Ω–¥–ª–µ—Ä—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å callback (–Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏)
    app.add_handler(CallbackQueryHandler(handle_main_menu, pattern=r"^(book_table|admin_menu)$"))  # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    app.add_handler(CallbackQueryHandler(handle_calendar, pattern=r"^calendar_"))  # –í—ã–±–æ—Ä –¥–∞—Ç—ã
    app.add_handler(CallbackQueryHandler(handle_calendar, pattern=r"^date_"))  # –í—ã–±–æ—Ä –¥–∞—Ç—ã
    app.add_handler(CallbackQueryHandler(handle_guest_selection, pattern=r"^guests_"))  # –í—ã–±–æ—Ä –≥–æ—Å—Ç–µ–π
    app.add_handler(CallbackQueryHandler(handle_time_selection, pattern=r"^time_"))  # –í—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏
    app.add_handler(CallbackQueryHandler(skip_comment, pattern=r"^skip_comment$")) # –ü—Ä–æ–ø—É—Å–∫ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏—è –±—Ä–æ–Ω–∏
    app.add_handler(CallbackQueryHandler(confirm_reservation, pattern=r"^confirm_"))  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—Ä–æ–Ω–∏
    app.add_handler(CallbackQueryHandler(clarify_reservation, pattern=r"^clarify_"))  # –£—Ç–æ—á–Ω–µ–Ω–∏–µ –±—Ä–æ–Ω–∏
    app.add_handler(CallbackQueryHandler(handle_shift_selection, pattern=r"^(take_shift|set_admin|set_hookah_master)$"))  # –í—ã–±–æ—Ä —Ä–æ–ª–∏ –Ω–∞ —Å–º–µ–Ω–µ
    app.add_handler(CallbackQueryHandler(handle_staff_choice, pattern=r"^choose_admin_|choose_hookah_master_"))  # –í—ã–±–æ—Ä —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
    app.add_handler(CallbackQueryHandler(handle_admin_menu, pattern=r"^(list_admins|add_admin|remove_admin|broadcast_message|edit_discount|go_back)$"))  # –ê–¥–º–∏–Ω –º–µ–Ω—é
    app.add_handler(CallbackQueryHandler(handle_admin_removal, pattern=r"^delete_admin_\d+$"))  # –£–¥–∞–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞
    app.add_handler(CallbackQueryHandler(handle_phone_selection, pattern=r"^select_phone_"))  # –í—ã–±–æ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫–∏–¥–∫–∏
    app.add_handler(CallbackQueryHandler(show_booking_list, pattern=r"^booking_list$"))
    
    # –•–µ–Ω–¥–ª–µ—Ä—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    app.add_handler(MessageHandler(filters.PHOTO, handle_message))  # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))  # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞

add_handlers(app)
app.run_polling()
